// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt { quick-tap-ms = <175>; };

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <400>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp SEMI         &kp COMMA        &kp DOT            &kp P         &kp Y            &kp F       &kp G         &kp C               &kp R             &kp L
&hrm LEFT_ALT A  &hrm LEFT_GUI O  &hrm LEFT_SHIFT E  &hrm LCTRL U  &kp I            &kp D       &hrm RCTRL H  &hrm RIGHT_SHIFT T  &hrm RIGHT_GUI N  &hrm RIGHT_ALT S
&kp SQT          &kp Q            &kp J              &kp K         &kp X            &kp B       &kp M         &kp W               &kp V             &kp Z
                                                     &lt 2 ESCAPE  &ht TAB SPACE    &kp RETURN  &lt 1 BSPC
            >;
        };

        right_layer {
            bindings = <
&kp INS  &kp PG_DN  &kp UP    &kp PG_UP  &trans    &kp FSLH  &kp N7   &kp N8  &kp N9  &kp MINUS
&kp DEL  &kp LEFT   &kp DOWN  &kp RIGHT  &trans    &kp STAR  &kp N4   &kp N5  &kp N6  &kp PLUS
&trans   &trans     &kp HOME  &kp END    &trans    &trans    &kp N1   &kp N2  &kp N3  &kp RET
                              &trans     &trans    &kp N0    &kp DOT
            >;
        };

        left_layer {
            bindings = <
&mo 5     &kp LBKT  &kp LBRC   &kp RBRC      &trans       &kp CARET  &kp LPAR   &kp RPAR   &kp RBKT  &kp TILDE
&kp EXCL  &kp AT    &kp HASH   &kp DLLR      &kp PRCNT    &kp ASTRK  &kp MINUS  &kp EQUAL  &kp BSLH  &kp GRAVE
&trans    &trans    &kp SLASH  &kp QUESTION  &trans       &kp AMPS   &kp UNDER  &kp PLUS   &kp PIPE  &trans
                               &trans        &trans       &trans     &trans
            >;
        };

        tri_layer {
            bindings = <
&sys_reset      &trans  &trans  &trans      &bt BT_SEL 0    &trans  &trans  &trans  &trans  &sys_reset
&bootloader     &trans  &trans  &trans      &bt BT_SEL 1    &trans  &to 4   &trans  &trans  &bootloader
&bt BT_CLR_ALL  &trans  &trans  &bt BT_CLR  &bt BT_SEL 2    &trans  &trans  &trans  &trans  &trans
                                &trans      &trans          &trans  &trans
            >;
        };

        GAMING_LAYER {
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E    &kp R        &none  &none  &none  &none  &none
&kp LSHFT  &kp A  &kp S  &kp D    &kp F        &none  &to 0  &none  &none  &none
&kp LCTRL  &kp Z  &kp X  &kp C    &kp V        &none  &none  &none  &none  &none
                         &kp TAB  &kp SPACE    &none  &none
            >;
        };

        function_layer {
            bindings = <
&none  &none  &none  &none  &none    &kp F1   &kp F2   &kp F3  &kp F4  &kp F5
&none  &none  &none  &none  &none    &kp F6   &kp F7   &kp F8  &kp F9  &kp F10
&none  &none  &none  &none  &none    &kp F11  &kp F12  &none   &none   &none
                     &none  &none    &none    &none
            >;
        };
    };
};
